name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testing
          POSTGRES_USER: testing
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U testing"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: mbstring, dom, fileinfo, pgsql, pdo_pgsql, zip, gd, curl, xml, json, bcmath, openssl, tokenizer, ctype, iconv, intl, pdo, soap, xmlreader, xmlwriter, xsl, zip, zlib
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --no-interaction

      - name: Copy environment file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate application key
        run: php artisan key:generate

      - name: Wait for PostgreSQL to be ready
        run: |
          while ! pg_isready -h"127.0.0.1" -p5432 -U"testing"; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: Set up database
        run: |
          php artisan migrate --force
          php artisan db:seed --force

      - name: Run tests
        run: php artisan test --coverage --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: mbstring, dom, fileinfo, pgsql, pdo_pgsql, zip, gd, curl, xml, json, bcmath, openssl, tokenizer, ctype, iconv, intl, pdo, soap, xmlreader, xmlwriter, xsl, zip, zlib

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --no-interaction

      - name: Run PHP CS Fixer
        run: |
          if [ -f vendor/bin/php-cs-fixer ]; then
            vendor/bin/php-cs-fixer fix --dry-run --diff --verbose
          else
            echo "PHP CS Fixer not installed, skipping..."
          fi

      - name: Run PHPStan
        run: |
          if [ -f vendor/bin/phpstan ]; then
            vendor/bin/phpstan analyse --memory-limit=1G
          else
            echo "PHPStan not installed, skipping..."
          fi

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: mbstring, dom, fileinfo, pgsql, pdo_pgsql, zip, gd, curl, xml, json, bcmath, openssl, tokenizer, ctype, iconv, intl, pdo, soap, xmlreader, xmlwriter, xsl, zip, zlib

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --no-interaction

      - name: Run security audit
        run: composer audit

      - name: Run Laravel security check
        run: |
          if [ -f vendor/bin/security-checker ]; then
            vendor/bin/security-checker security:check
          else
            echo "Security checker not installed, skipping..."
          fi

  build:
    runs-on: ubuntu-latest
    needs: [test, code-quality, security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: mbstring, dom, fileinfo, pgsql, pdo_pgsql, zip, gd, curl, xml, json, bcmath, openssl, tokenizer, ctype, iconv, intl, pdo, soap, xmlreader, xmlwriter, xsl, zip, zlib

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --no-interaction --no-dev

      - name: Generate optimized autoloader
        run: composer dump-autoload --optimize

      - name: Cache configuration
        run: php artisan config:cache

      - name: Cache routes
        run: php artisan route:cache

      - name: Cache views
        run: php artisan view:cache

      - name: Build successful
        run: echo "âœ… Build completed successfully - ready for deployment!"
