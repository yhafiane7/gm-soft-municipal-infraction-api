{
    "openapi": "3.0.0",
    "info": {
        "title": "INFRACTION-COMMUNE-BACKEND API",
        "description": "API for managing infractions, communes, decisions, and users in the commune system",
        "contact": {
            "name": "API Support",
            "email": "support@infraction-commune.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/agent": {
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "Get all agents",
                "description": "Retrieve a list of all agents in the system",
                "operationId": "getAgents",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "nom": {
                                                "type": "string",
                                                "example": "Smith"
                                            },
                                            "prenom": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "tel": {
                                                "type": "string",
                                                "example": "1234567890"
                                            },
                                            "cin": {
                                                "type": "string",
                                                "example": "AB123456"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Agents"
                ],
                "summary": "Create a new agent",
                "description": "Create a new agent with the provided information",
                "operationId": "createAgent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "prenom",
                                    "tel",
                                    "cin"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "minLength": 2,
                                        "example": "Smith"
                                    },
                                    "prenom": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "minLength": 2,
                                        "example": "John"
                                    },
                                    "tel": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "minLength": 10,
                                        "pattern": "^[0-9]+$",
                                        "example": "1234567890"
                                    },
                                    "cin": {
                                        "type": "string",
                                        "maxLength": 12,
                                        "pattern": "^[A-Z0-9]+$",
                                        "example": "AB123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Agent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agent created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Smith"
                                                },
                                                "prenom": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "tel": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "cin": {
                                                    "type": "string",
                                                    "example": "AB123456"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/categorie": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Retrieve a list of all categories in the system",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "nom": {
                                                "type": "string",
                                                "example": "Traffic Violation"
                                            },
                                            "degre": {
                                                "type": "integer",
                                                "maximum": 5,
                                                "minimum": 1,
                                                "example": 3
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category with the provided information",
                "operationId": "createCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "degre"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "minLength": 2,
                                        "example": "Traffic Violation"
                                    },
                                    "degre": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Traffic Violation"
                                                },
                                                "degre": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/categorie/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "description": "Retrieve a specific category by its ID",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "nom": {
                                            "type": "string",
                                            "example": "Traffic Violation"
                                        },
                                        "degre": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Update an existing category with the provided information",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "minLength": 2,
                                        "example": "Traffic Violation"
                                    },
                                    "degre": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Traffic Violation"
                                                },
                                                "degre": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Delete a category if it's not referenced in any infraction",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Cannot delete category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot delete category"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category is referenced in infraction: 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commune": {
            "get": {
                "tags": [
                    "Communes"
                ],
                "summary": "Get all communes",
                "description": "Retrieve a list of all communes in the system",
                "operationId": "getCommunes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "pachalik-circon": {
                                                "type": "string",
                                                "example": "Pachalik Central"
                                            },
                                            "caidat": {
                                                "type": "string",
                                                "example": "Caidat North"
                                            },
                                            "nom": {
                                                "type": "string",
                                                "example": "Montreal"
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 45.5017
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": -73.5673
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Communes"
                ],
                "summary": "Create a new commune",
                "description": "Create a new commune with the provided information",
                "operationId": "createCommune",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pachalik-circon",
                                    "caidat",
                                    "nom",
                                    "latitude",
                                    "longitude"
                                ],
                                "properties": {
                                    "pachalik-circon": {
                                        "type": "string",
                                        "maxLength": 200,
                                        "minLength": 2,
                                        "example": "Pachalik Central"
                                    },
                                    "caidat": {
                                        "type": "string",
                                        "maxLength": 200,
                                        "minLength": 2,
                                        "example": "Caidat North"
                                    },
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "minLength": 2,
                                        "example": "Montreal"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 90,
                                        "minimum": -90,
                                        "example": 45.5017
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 180,
                                        "minimum": -180,
                                        "example": -73.5673
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Commune created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commune created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pachalik-circon": {
                                                    "type": "string",
                                                    "example": "Pachalik Central"
                                                },
                                                "caidat": {
                                                    "type": "string",
                                                    "example": "Caidat North"
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Montreal"
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45.5017
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -73.5673
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/commune/{id}": {
            "get": {
                "tags": [
                    "Communes"
                ],
                "summary": "Get commune by ID",
                "description": "Retrieve a specific commune by its ID",
                "operationId": "getCommune",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commune ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "pachalik-circon": {
                                            "type": "string",
                                            "example": "Pachalik Central"
                                        },
                                        "caidat": {
                                            "type": "string",
                                            "example": "Caidat North"
                                        },
                                        "nom": {
                                            "type": "string",
                                            "example": "Montreal"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 45.5017
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": -73.5673
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commune not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Commune not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Communes"
                ],
                "summary": "Update a commune",
                "description": "Update an existing commune with the provided information",
                "operationId": "updateCommune",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commune ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pachalik-circon": {
                                        "type": "string",
                                        "maxLength": 200,
                                        "minLength": 2,
                                        "example": "Pachalik Central"
                                    },
                                    "caidat": {
                                        "type": "string",
                                        "maxLength": 200,
                                        "minLength": 2,
                                        "example": "Caidat North"
                                    },
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "minLength": 2,
                                        "example": "Montreal"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 90,
                                        "minimum": -90,
                                        "example": 45.5017
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 180,
                                        "minimum": -180,
                                        "example": -73.5673
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commune updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commune updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pachalik-circon": {
                                                    "type": "string",
                                                    "example": "Pachalik Central"
                                                },
                                                "caidat": {
                                                    "type": "string",
                                                    "example": "Caidat North"
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Montreal"
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45.5017
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -73.5673
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commune not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Commune not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Communes"
                ],
                "summary": "Delete a commune",
                "description": "Delete a commune if it's not referenced in any infraction",
                "operationId": "deleteCommune",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commune ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commune deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commune deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commune not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Commune not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Cannot delete commune",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot delete commune"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Commune is referenced in infraction: 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/decision": {
            "get": {
                "tags": [
                    "Decisions"
                ],
                "summary": "Get all decisions",
                "description": "Retrieve a list of all decisions in the system",
                "operationId": "getDecisions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-12-15"
                                            },
                                            "decisionprise": {
                                                "type": "string",
                                                "example": "Fine of 150 DH"
                                            },
                                            "infraction_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Decisions"
                ],
                "summary": "Create a new decision",
                "description": "Create a new decision for an infraction",
                "operationId": "createDecision",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "date",
                                    "decisionprise",
                                    "infraction_id"
                                ],
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-15"
                                    },
                                    "decisionprise": {
                                        "type": "string",
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "example": "Fine of 150 DH"
                                    },
                                    "infraction_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Decision created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Decision created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-12-15"
                                                },
                                                "decisionprise": {
                                                    "type": "string",
                                                    "example": "Fine of 150 DH"
                                                },
                                                "infraction_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/infraction": {
            "get": {
                "tags": [
                    "Infractions"
                ],
                "summary": "Get all infractions",
                "description": "Retrieve a list of all infractions in the system",
                "operationId": "getInfractions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "nom": {
                                                "type": "string",
                                                "example": "Speeding"
                                            },
                                            "date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-12-01"
                                            },
                                            "adresse": {
                                                "type": "string",
                                                "example": "123 Main Street"
                                            },
                                            "commune_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "violant_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "agent_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "categorie_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 45.5017
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": -73.5673
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Infractions"
                ],
                "summary": "Create a new infraction",
                "description": "Create a new infraction with the provided information",
                "operationId": "createInfraction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "date",
                                    "adresse",
                                    "commune_id",
                                    "violant_id",
                                    "agent_id",
                                    "categorie_id",
                                    "latitude",
                                    "longitude"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "minLength": 2,
                                        "example": "Speeding"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-01"
                                    },
                                    "adresse": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 5,
                                        "example": "123 Main Street"
                                    },
                                    "commune_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "violant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "agent_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "categorie_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 90,
                                        "minimum": -90,
                                        "example": 45.5017
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 180,
                                        "minimum": -180,
                                        "example": -73.5673
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Infraction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Infraction created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Speeding"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-12-01"
                                                },
                                                "adresse": {
                                                    "type": "string",
                                                    "example": "123 Main Street"
                                                },
                                                "commune_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "violant_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "agent_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "categorie_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45.5017
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -73.5673
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/infraction/{id}": {
            "get": {
                "tags": [
                    "Infractions"
                ],
                "summary": "Get infraction by ID",
                "description": "Retrieve a specific infraction by its ID",
                "operationId": "getInfraction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Infraction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "nom": {
                                            "type": "string",
                                            "example": "Speeding"
                                        },
                                        "date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-12-01"
                                        },
                                        "adresse": {
                                            "type": "string",
                                            "example": "123 Main Street"
                                        },
                                        "commune_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "violant_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "agent_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "categorie_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 45.5017
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": -73.5673
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Infraction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Infraction not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Infractions"
                ],
                "summary": "Update an infraction",
                "description": "Update an existing infraction with the provided information",
                "operationId": "updateInfraction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Infraction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "minLength": 2,
                                        "example": "Speeding"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-01"
                                    },
                                    "adresse": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 5,
                                        "example": "123 Main Street"
                                    },
                                    "commune_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "violant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "agent_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "categorie_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 90,
                                        "minimum": -90,
                                        "example": 45.5017
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 180,
                                        "minimum": -180,
                                        "example": -73.5673
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Infraction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Infraction updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Speeding"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-12-01"
                                                },
                                                "adresse": {
                                                    "type": "string",
                                                    "example": "123 Main Street"
                                                },
                                                "commune_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "violant_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "agent_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "categorie_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45.5017
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -73.5673
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Infraction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Infraction not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Infractions"
                ],
                "summary": "Delete an infraction",
                "description": "Delete an infraction if it's not referenced in any decision",
                "operationId": "deleteInfraction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Infraction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Infraction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Infraction deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Infraction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Infraction not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Cannot delete infraction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot delete infraction"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Infraction is referenced in decision: 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users in the system",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "nom": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "prenom": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "Tel": {
                                                "type": "string",
                                                "example": "+1234567890"
                                            },
                                            "role": {
                                                "type": "string",
                                                "example": "user"
                                            },
                                            "login": {
                                                "type": "string",
                                                "example": "johndoe"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Create a new user with the provided information",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "prenom",
                                    "Tel",
                                    "role",
                                    "login"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "prenom": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "Tel": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "+1234567890"
                                    },
                                    "role": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "user"
                                    },
                                    "login": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "johndoe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "prenom": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "Tel": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "login": {
                                                    "type": "string",
                                                    "example": "johndoe"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Retrieve a specific user by their ID",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "nom": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "prenom": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "Tel": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "user"
                                        },
                                        "login": {
                                            "type": "string",
                                            "example": "johndoe"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update an existing user with the provided information",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "prenom": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "Tel": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "+1234567890"
                                    },
                                    "role": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "user"
                                    },
                                    "login": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "johndoe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "nom": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "prenom": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "Tel": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "login": {
                                                    "type": "string",
                                                    "example": "johndoe"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Delete a user from the system",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Agents",
            "description": "Agent management endpoints"
        },
        {
            "name": "Users",
            "description": "User management endpoints"
        },
        {
            "name": "Infractions",
            "description": "Infraction management endpoints"
        },
        {
            "name": "Decisions",
            "description": "Decision management endpoints"
        },
        {
            "name": "Communes",
            "description": "Commune management endpoints"
        },
        {
            "name": "Categories",
            "description": "Category management endpoints"
        }
    ]
}